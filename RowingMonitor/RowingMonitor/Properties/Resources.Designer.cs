//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RowingMonitor.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RowingMonitor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Catch factor (ms) ähnelt.
        /// </summary>
        public static string CatchFactor {
            get {
                return ResourceManager.GetString("CatchFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Catch trunk angle ähnelt.
        /// </summary>
        public static string CatchTrunkAngleTitle {
            get {
                return ResourceManager.GetString("CatchTrunkAngleTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start tracking with the dashboard layout for coaches. ähnelt.
        /// </summary>
        public static string CoachMessage {
            get {
                return ResourceManager.GetString("CoachMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Coach view ähnelt.
        /// </summary>
        public static string CoachTitle {
            get {
                return ResourceManager.GetString("CoachTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start tracking and show all available evaluation elements. ähnelt.
        /// </summary>
        public static string DebugMessage {
            get {
                return ResourceManager.GetString("DebugMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debug view ähnelt.
        /// </summary>
        public static string DebugTitle {
            get {
                return ResourceManager.GetString("DebugTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to write screenshot to {0} ähnelt.
        /// </summary>
        public static string FailedScreenshotStatusTextFormat {
            get {
                return ResourceManager.GetString("FailedScreenshotStatusTextFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finish trunk angle ähnelt.
        /// </summary>
        public static string FinishTrunkAngleTitle {
            get {
                return ResourceManager.GetString("FinishTrunkAngleTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Frame index ähnelt.
        /// </summary>
        public static string FrameIndex {
            get {
                return ResourceManager.GetString("FrameIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose a view ähnelt.
        /// </summary>
        public static string HomeTitle {
            get {
                return ResourceManager.GetString("HomeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find a position for the Kinect sensor and trainee. The skeleton should stay green for the complete stroke to get the best results. ähnelt.
        /// </summary>
        public static string KinectCalibrationMessage {
            get {
                return ResourceManager.GetString("KinectCalibrationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kinect calibration ähnelt.
        /// </summary>
        public static string KinectCalibrationTitle {
            get {
                return ResourceManager.GetString("KinectCalibrationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kinect not connected. ähnelt.
        /// </summary>
        public static string KinectNotFoundMessage {
            get {
                return ResourceManager.GetString("KinectNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum arms velocity (m/s) ähnelt.
        /// </summary>
        public static string MaxArmsVelocity {
            get {
                return ResourceManager.GetString("MaxArmsVelocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum catch trunk angle (°) ähnelt.
        /// </summary>
        public static string MaxCatchTrunkAngle {
            get {
                return ResourceManager.GetString("MaxCatchTrunkAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum finish trunk angle (°) ähnelt.
        /// </summary>
        public static string MaxFinishTrunkAngle {
            get {
                return ResourceManager.GetString("MaxFinishTrunkAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum handle velocity (m/s) ähnelt.
        /// </summary>
        public static string MaxHandleVelocity {
            get {
                return ResourceManager.GetString("MaxHandleVelocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum legs velocity (m/s) ähnelt.
        /// </summary>
        public static string MaxLegsVelocity {
            get {
                return ResourceManager.GetString("MaxLegsVelocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum trunk velocity (m/s) ähnelt.
        /// </summary>
        public static string MaxTrunkVelocity {
            get {
                return ResourceManager.GetString("MaxTrunkVelocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mean catch factor (ms) ähnelt.
        /// </summary>
        public static string MeanCatchFactor {
            get {
                return ResourceManager.GetString("MeanCatchFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mean maximum arms velocity (m/s) ähnelt.
        /// </summary>
        public static string MeanMaxArmsVelocity {
            get {
                return ResourceManager.GetString("MeanMaxArmsVelocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mean maximum handle velocity (m/s) ähnelt.
        /// </summary>
        public static string MeanMaxHandleVelocity {
            get {
                return ResourceManager.GetString("MeanMaxHandleVelocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mean maximum legs velocity (m/s) ähnelt.
        /// </summary>
        public static string MeanMaxLegsVelocity {
            get {
                return ResourceManager.GetString("MeanMaxLegsVelocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mean maximum trunk velocity (m/s) ähnelt.
        /// </summary>
        public static string MeanMaxTrunkVelocity {
            get {
                return ResourceManager.GetString("MeanMaxTrunkVelocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mean rowing style factor (%) ähnelt.
        /// </summary>
        public static string MeanRowingStyleFactor {
            get {
                return ResourceManager.GetString("MeanRowingStyleFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mean seat travelled (m) ähnelt.
        /// </summary>
        public static string MeanSeatTravelDistance {
            get {
                return ResourceManager.GetString("MeanSeatTravelDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mean stroke length (m) ähnelt.
        /// </summary>
        public static string MeanStrokeLength {
            get {
                return ResourceManager.GetString("MeanStrokeLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mean stroke time (s) ähnelt.
        /// </summary>
        public static string MeanStrokeTime {
            get {
                return ResourceManager.GetString("MeanStrokeTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ready Kinect found! ähnelt.
        /// </summary>
        public static string NoSensorStatusText {
            get {
                return ResourceManager.GetString("NoSensorStatusText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rowing style factor (%) ähnelt.
        /// </summary>
        public static string RowingStyleFactor {
            get {
                return ResourceManager.GetString("RowingStyleFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Running ähnelt.
        /// </summary>
        public static string RunningStatusText {
            get {
                return ResourceManager.GetString("RunningStatusText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Seat travelled (m) ähnelt.
        /// </summary>
        public static string SeatTravelDistance {
            get {
                return ResourceManager.GetString("SeatTravelDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kinect not available! ähnelt.
        /// </summary>
        public static string SensorNotAvailableStatusText {
            get {
                return ResourceManager.GetString("SensorNotAvailableStatusText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Session duration in (m) ähnelt.
        /// </summary>
        public static string SessionTime {
            get {
                return ResourceManager.GetString("SessionTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string SettingsTitle {
            get {
                return ResourceManager.GetString("SettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of strokes ähnelt.
        /// </summary>
        public static string StrokeCount {
            get {
                return ResourceManager.GetString("StrokeCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stroke length (m) ähnelt.
        /// </summary>
        public static string StrokeLength {
            get {
                return ResourceManager.GetString("StrokeLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stroke rate ähnelt.
        /// </summary>
        public static string StrokeRate {
            get {
                return ResourceManager.GetString("StrokeRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Strokes per minute ähnelt.
        /// </summary>
        public static string StrokesPerMinute {
            get {
                return ResourceManager.GetString("StrokesPerMinute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stroke time (s) ähnelt.
        /// </summary>
        public static string StrokeTime {
            get {
                return ResourceManager.GetString("StrokeTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start tracking with the dashboard layout for trainees. ähnelt.
        /// </summary>
        public static string TraineeMessage {
            get {
                return ResourceManager.GetString("TraineeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Trainee view ähnelt.
        /// </summary>
        public static string TraineeTitle {
            get {
                return ResourceManager.GetString("TraineeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Trunk angle (°) ähnelt.
        /// </summary>
        public static string TrunkAngle {
            get {
                return ResourceManager.GetString("TrunkAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Trunk angle ähnelt.
        /// </summary>
        public static string TrunkAngleTitle {
            get {
                return ResourceManager.GetString("TrunkAngleTitle", resourceCulture);
            }
        }
    }
}
